// Place your key bindings in this file to override the defaults
[
    {
        "key": "cmd+w",
        "command": "-workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
        "key": "shift+cmd+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "ctrl+alt+cmd+n",
        "command": "-welcome.showNewFileEntries"
    },
    {
        "key": "cmd+1",
        "command": "workbench.action.debug.stepInto",
        "when": "debugState != 'inactive'"
    },
    {
        "key": "cmd+2",
        "command": "workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "cmd+3",
        "command": "workbench.action.debug.continue",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "cmd+5",
        "command": "workbench.action.debug.start",
        "when": "debuggersAvailable && debugState == 'inactive'"
    },
    {
        "key": "cmd+3",
        "command": "workbench.action.debug.continue",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "cmd+w",
        "command": "-workbench.action.terminal.killEditor",
        "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+w",
        "command": "-workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
        "key": "cmd+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "cmd+w",
        "command": "editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+n",
        "command": "-workbench.action.newWindow"
    },
    {
        "key": "cmd+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "shift+cmd+l",
        "command": "workbench.files.action.showActiveFileInExplorer"
    },
    {
        "key": "cmd+f1",
        "command": "workbench.files.action.showActiveFileInExplorer"
    },
    {
        "key": "shift+cmd+n",
        "command": "workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "shift+cmd+n",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "alt+cmd+left",
        "command": "workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "cmd+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "cmd+b",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus"
    },
    {
        "key": "alt+f1",
        "command": "-editor.action.accessibilityHelp",
        "when": "!accessibilityHelpIsShown"
    },
    {
        "key": "alt+f2",
        "command": "-editor.action.accessibleView"
    },
    {
        "key": "f2",
        "command": "renameFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "shift+cmd+r",
        "command": "editor.action.refactor",
        "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+p",
        "command": "editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "shift+cmd+w",
        "command": "editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+d",
        "command": "editor.action.duplicateSelection"
    },
    {
        "key": "shift+cmd+t",
        "command": "github.copilot.interactiveEditor.generateTests"
    },
    {
        "key": "cmd+insert",
        "command": "github.copilot.interactiveEditor.generate"
    },
    {
        "key": "cmd+b",
        "command": "editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus"
    },
    {
        "key": "ctrl+shift+cmd+b",
        "command": "editor.action.revealDeclaration"
    },
    {
        "key": "cmd+l",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+insert",
        "command": "welcome.showNewFileEntries"
    },
    {
        "key": "shift+cmd+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+up",
        "command": "-editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+down",
        "command": "-editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+t r",
        "command": "testing.runAll"
    },
    {
        "key": "cmd+t d",
        "command": "testing.debugLastRun"
    },
    {
        "key": "cmd+t f",
        "command": "testing.reRunFailTests"
    },
    {
        "key": "cmd+j",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+f",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "ctrl+shift+f",
        "command": "workbench.view.search",
        "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.view.search",
        "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
    },
    {
        "key": "shift+cmd+f",
        "command": "references-view.findReferences",
        "when": "editorHasReferenceProvider"
    },
    {
        "key": "enter",
        "command": "-renameFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+shift+n",
        "command": "welcome.showNewFileEntries"
    },
    {
        "key": "cmd+y",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+q",
        "command": "-workbench.action.quit"
    },
    {
        "key": "cmd+h",
        "command": "gitlens.toggleFileBlame",
        "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/"
    },
    {
        "key": "cmd+e",
        "command": "-editor.action.toggleScreenReaderAccessibilityMode",
        "when": "accessibilityHelpIsShown"
    },
    {
        "key": "cmd+e",
        "command": "-actions.findWithSelection"
    },
    {
        "key": "ctrl+shift+e",
        "command": "workbench.files.action.focusFilesExplorer"
    },
    {
        "key": "shift+alt+insert",
        "command": "explorer.newFolder"
    },
    {
        "key": "cmd+enter",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+t ctrl+enter",
        "command": "github.copilot.interactiveEditor.generateTests"
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.view.testing.focus"
    },
    {
        "key": "cmd+t t",
        "command": "io.orta.jest.editor.run-all-tests",
        "when": "editorLangId =~ /(javascript|javascriptreact|typescript|typescriptreact|vue)/"
    },
    {
        "key": "cmd+f2",
        "command": "workbench.action.debug.disconnect",
        "when": "focusedSessionIsAttach && inDebugMode"
    },
    {
        "key": "shift+f2",
        "command": "editor.action.changeAll",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+f2",
        "command": "-editor.action.changeAll",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+f1",
        "command": "workbench.action.closePanel"
    },
    {
        "key": "cmd+p",
        "command": "workbench.action.pinEditor",
        "when": "!activeEditorIsPinned"
    },
    {
        "key": "cmd+p",
        "command": "workbench.action.unpinEditor",
        "when": "activeEditorIsPinned"
    },
    {
        "key": "shift+cmd+f",
        "command": "editor.action.goToReferences",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "shift+f12",
        "command": "-editor.action.goToReferences",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "shift+alt+cmd+f",
        "command": "references-view.findReferences",
        "when": "editorHasReferenceProvider"
    },
    {
        "key": "cmd+f1",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "cmd+j",
        "command": "-workbench.action.togglePanel"
    }
]