[pull]
  ; rebase = true
  autoStash = true
[push]
  autoSetupRemote = true
[rebase]
  autoStash = true
[mergetool]
  prompt = false
  keepBackup = false
  keepTemporaries = false
[merge]
  autosStash = true
  tool = nvim_diffview
[mergetool "nvim_diffview"]
  cmd = NVIM_APPNAME=lazyvim nvim -c 'DiffviewOpen'
[alias]
  ; mranch = !git symbolic-ref refs/remotes/origin/HEAD | cut -d'/' -f4
  ; mranch = !git ls-remote --symref origin HEAD
  mranch = !git branch -l main master --format '%(refname:short)'
  ; fresh = !git fetch origin $(git mranch):$(git mranch) && git merge $(git mranch) 
  fresh = "!f() { stash_me=$(git stash save 'on-fresh'); stashed=$(echo $stash_me|grep 'on-fresh'); git fetch origin $(git mranch):$(git mranch); git merge $(git mranch); if [ '$stashed' ]; then git stash pop; fi; }; f"
  fresh-b = "!f() { git switch $(git mranch) && git pull && git checkout -b $1; }; f"
  swibr = "!f() { stash_me=$(git stash save 'on-switch'); stashed=$(echo $stash_me|grep 'on-switch'); git switch $1; if [ '$stashed' ]; then git stash pop; fi; }; f"
  nuke = !git rebase --abort && git reset --hard && git clean -fd
  tree = !git log --color --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --all

